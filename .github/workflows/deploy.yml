name: Deploy
run-name: ðŸšš ${{ github.ref_name }} to ${{github.event.inputs.environment}} with ${{github.event.inputs.api}} API

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Target
        required: true
        options:
          - BS5 # https://bs-5-stage.dccn.ankr.com/staking/
          - BS6 # https://bs-6-stage.dccn.ankr.com/staking/
          - BS7 # https://bs-7-stage.dccn.ankr.com/staking/
          - BS8 # https://bs-8-stage.dccn.ankr.com/staking/
      api:
        type: choice
        description: API
        required: true
        options:
          - DEV
          - STAGE
          - PROD

jobs:
  deploy:
    runs-on: [ self-hosted ]
    container:
      image: registry.ankr.network/library/alpine-git-node-aws
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-deploy
      cancel-in-progress: true
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          message: Build of `${{github.ref_name}}` for `${{github.event.inputs.environment}}` with API `${{github.event.inputs.api}}` has started
        if: always()
      - uses: actions/checkout@v4
      - uses: nelonoel/branch-name@v1.0.1

      #  - name: Prevent wrong version releasing
      #    if: ${{ github.event.inputs.environment == 'PROD' && github.ref != 'refs/heads/main' }}
      #    run: |
      #      echo "Production deployment is possible only from the main branch"
      #      exit 1

      - name: Get deployment information
        run: |
          echo "Branch: ${BRANCH_NAME}"
          echo "Environment: ${{github.event.inputs.api}}"
          echo "Domain: ${{github.event.inputs.environment}}"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build dev
        id: build-DEV
        working-directory: .
        env:
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
          TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
        if: ${{ github.event.inputs.api == 'DEV' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:dev

      - name: Build stage
        id: build-STAGE
        working-directory: .
        if: ${{ github.event.inputs.api == 'STAGE' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:stage

      - name: Build production
        working-directory: .
        if: ${{ github.event.inputs.api == 'PROD' }}
        run: |
          export NODE_OPTIONS="--max_old_space_size=4096"
          yarn build:prod

      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Copy files to the production website with the AWS CLI
        working-directory: .
        env:
          DOMAIN: ${{ vars[format('{0}{1}', github.event.inputs.environment, '_DOMAIN')] }}
          DISTRIBUTION_ID: ${{ vars[format('{0}{1}', github.event.inputs.environment, '_DISTRIBUTION_ID')] }}
        run: |
          aws s3 sync --delete ./build s3://$DOMAIN/staking/ --acl public-read --cache-control "public,max-age=600,s-maxage=3600"
          aws configure set preview.cloudfront true
          echo "Invalidating CDN network"
          INVALIDATION_ID=`aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*' | jq -r '.Invalidation.Id'`
          echo "Invalidation ID is $INVALIDATION_ID"
          echo "CDN Invalidation request is sent."
          echo "Deployed to https://$DOMAIN"

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
